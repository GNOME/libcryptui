<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="libcryptui-cryptui">
<refmeta>
<refentrytitle role="top_of_page" id="libcryptui-cryptui.top_of_page">cryptui</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBCRYPTUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>cryptui</refname>
<refpurpose></refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="libcryptui-cryptui.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
enum                <link linkend="CryptUIEncType">CryptUIEncType</link>;
enum                <link linkend="CryptUIKeyFlags">CryptUIKeyFlags</link>;
enum                <link linkend="CryptUILocation">CryptUILocation</link>;
enum                <link linkend="CryptUIValidity">CryptUIValidity</link>;
<link linkend="gchar">gchar</link>*              <link linkend="cryptui-key-get-base">cryptui_key_get_base</link>                (const <link linkend="gchar">gchar</link> *key);
<link linkend="CryptUIEncType">CryptUIEncType</link>      <link linkend="cryptui-key-get-enctype">cryptui_key_get_enctype</link>             (const <link linkend="gchar">gchar</link> *key);
<link linkend="void">void</link>                <link linkend="cryptui-display-notification">cryptui_display_notification</link>        (const <link linkend="gchar">gchar</link> *title,
                                                         const <link linkend="gchar">gchar</link> *body,
                                                         const <link linkend="gchar">gchar</link> *icon,
                                                         <link linkend="gboolean">gboolean</link> urgent);
<link linkend="gchar">gchar</link>**             <link linkend="cryptui-prompt-recipients">cryptui_prompt_recipients</link>           (<link linkend="CryptUIKeyset">CryptUIKeyset</link> *keyset,
                                                         const <link linkend="gchar">gchar</link> *title,
                                                         <link linkend="gchar">gchar</link> **signer);
<link linkend="gchar">gchar</link>*              <link linkend="cryptui-prompt-signer">cryptui_prompt_signer</link>               (<link linkend="CryptUIKeyset">CryptUIKeyset</link> *keyset,
                                                         const <link linkend="gchar">gchar</link> *title);
<link linkend="void">void</link>                <link linkend="cryptui-need-to-get-keys">cryptui_need_to_get_keys</link>            ();
</synopsis>
</refsynopsisdiv>









<refsect1 id="libcryptui-cryptui.description" role="desc">
<title role="desc.title">Description</title>
<para>

</para>
</refsect1>

<refsect1 id="libcryptui-cryptui.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="CryptUIEncType" role="enum">
<title>enum CryptUIEncType</title>
<indexterm zone="CryptUIEncType"><primary>CryptUIEncType</primary></indexterm><programlisting>typedef enum {
    CRYPTUI_ENCTYPE_NONE =       0,
    CRYPTUI_ENCTYPE_SYMMETRIC =  1,
    CRYPTUI_ENCTYPE_PUBLIC =     2,
    CRYPTUI_ENCTYPE_PRIVATE =    3,
    
    /* Used internally */
    _CRYPTUI_ENCTYPE_MAXVALUE
} CryptUIEncType;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="CryptUIKeyFlags" role="enum">
<title>enum CryptUIKeyFlags</title>
<indexterm zone="CryptUIKeyFlags"><primary>CryptUIKeyFlags</primary></indexterm><programlisting>typedef enum {
    CRYPTUI_FLAG_IS_VALID =    0x00000001,
    CRYPTUI_FLAG_CAN_ENCRYPT = 0x00000002,
    CRYPTUI_FLAG_CAN_SIGN =    0x00000004,
    CRYPTUI_FLAG_EXPIRED =     0x00000100,
    CRYPTUI_FLAG_REVOKED =     0x00000200,
    CRYPTUI_FLAG_DISABLED =    0x00000400,
    CRYPTUI_FLAG_TRUSTED =     0x00001000,
    CRYPTUI_FLAG_EXPORTABLE =  0x00100000
} CryptUIKeyFlags;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="CryptUILocation" role="enum">
<title>enum CryptUILocation</title>
<indexterm zone="CryptUILocation"><primary>CryptUILocation</primary></indexterm><programlisting>typedef enum {
    CRYPTUI_LOC_INVALID =        0,    /* An invalid key */
    CRYPTUI_LOC_MISSING =       10,    /* A key we don't know anything about */
    CRYPTUI_LOC_SEARCHING =     20,    /* A key we're searching for but haven't found yet */
    CRYPTUI_LOC_REMOTE =        50,    /* A key that we've found is present remotely */
    CRYPTUI_LOC_LOCAL =        100,    /* A key on the local machine */
} CryptUILocation;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="CryptUIValidity" role="enum">
<title>enum CryptUIValidity</title>
<indexterm zone="CryptUIValidity"><primary>CryptUIValidity</primary></indexterm><programlisting>typedef enum {
    CRYPTUI_VALIDITY_REVOKED =   -3,
    CRYPTUI_VALIDITY_DISABLED =  -2,
    CRYPTUI_VALIDITY_NEVER =     -1,
    CRYPTUI_VALIDITY_UNKNOWN =    0,
    CRYPTUI_VALIDITY_MARGINAL =   1,
    CRYPTUI_VALIDITY_FULL =       5,
    CRYPTUI_VALIDITY_ULTIMATE =  10
} CryptUIValidity;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="cryptui-key-get-base" role="function">
<title>cryptui_key_get_base ()</title>
<indexterm zone="cryptui-key-get-base"><primary>cryptui_key_get_base</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*              cryptui_key_get_base                (const <link linkend="gchar">gchar</link> *key);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="cryptui-key-get-enctype" role="function">
<title>cryptui_key_get_enctype ()</title>
<indexterm zone="cryptui-key-get-enctype"><primary>cryptui_key_get_enctype</primary></indexterm><programlisting><link linkend="CryptUIEncType">CryptUIEncType</link>      cryptui_key_get_enctype             (const <link linkend="gchar">gchar</link> *key);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="cryptui-display-notification" role="function">
<title>cryptui_display_notification ()</title>
<indexterm zone="cryptui-display-notification"><primary>cryptui_display_notification</primary></indexterm><programlisting><link linkend="void">void</link>                cryptui_display_notification        (const <link linkend="gchar">gchar</link> *title,
                                                         const <link linkend="gchar">gchar</link> *body,
                                                         const <link linkend="gchar">gchar</link> *icon,
                                                         <link linkend="gboolean">gboolean</link> urgent);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>title</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>body</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icon</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>urgent</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="cryptui-prompt-recipients" role="function">
<title>cryptui_prompt_recipients ()</title>
<indexterm zone="cryptui-prompt-recipients"><primary>cryptui_prompt_recipients</primary></indexterm><programlisting><link linkend="gchar">gchar</link>**             cryptui_prompt_recipients           (<link linkend="CryptUIKeyset">CryptUIKeyset</link> *keyset,
                                                         const <link linkend="gchar">gchar</link> *title,
                                                         <link linkend="gchar">gchar</link> **signer);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>keyset</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>title</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>signer</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="cryptui-prompt-signer" role="function">
<title>cryptui_prompt_signer ()</title>
<indexterm zone="cryptui-prompt-signer"><primary>cryptui_prompt_signer</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*              cryptui_prompt_signer               (<link linkend="CryptUIKeyset">CryptUIKeyset</link> *keyset,
                                                         const <link linkend="gchar">gchar</link> *title);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>keyset</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>title</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="cryptui-need-to-get-keys" role="function">
<title>cryptui_need_to_get_keys ()</title>
<indexterm zone="cryptui-need-to-get-keys"><primary>cryptui_need_to_get_keys</primary></indexterm><programlisting><link linkend="void">void</link>                cryptui_need_to_get_keys            ();</programlisting>
<para>
This function is called when seahorse needs to be launched to generate a
key or keys or import a key or keys to perform the requested operation.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> void
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
