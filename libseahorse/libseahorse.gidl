<?xml version="1.0"?>
<api version="1.0">
<namespace name="Seahorse">
	<object name="Commands" parent="GLib.Object" type-name="SeahorseCommands" get-type="seahorse_commands_get_type">
		<method name="show_properties" symbol="seahorse_commands_show_properties">
			<parameters>
				<parameter name="self" type="Seahorse.Commands*"/>
				<parameter name="key" type="Seahorse.Key*"/>
			</parameters>
			<return-type type="void"/>
		</method>
		<method name="delete_keys" symbol="seahorse_commands_delete_keys">
			<parameters>
				<parameter name="self" type="Seahorse.Commands*"/>
				<parameter name="keys" type="GLib.List*"/>
			</parameters>
			<return-type type="void"/>
		</method>
		<property name="view" type="Seahorse.View*" readable="1" writable="1"/>
		<property name="ktype" type="GLib.Quark" readable="1"/>
		<property name="command_actions" type="Gtk.ActionGroup*" readable="1"/>
		<property name="ui_definition" type="string*" readable="1"/>
	</object>
	<object name="Generator" parent="GLib.Object" type-name="SeahorseGenerator" get-type="seahorse_generator_get_type">
		<property name="actions" type="Gtk.ActionGroup*" readable="1"/>
	</object>
	<object name="Servers" parent="GLib.Object" type-name="SeahorseServers" get-type="seahorse_servers_get_type">
		<method name="get_types" symbol="seahorse_servers_get_types">
			<parameters>
			</parameters>
			<return-type type="GLib.SList*" transfer="full"/>
		</method>
		<method name="get_description" symbol="seahorse_servers_get_description">
			<parameters>
				<parameter name="type" type="const char*"/>
			</parameters>
			<return-type type="string*" transfer="full"/>
		</method>
		<method name="register_type" symbol="seahorse_servers_register_type">
			<parameters>
				<parameter name="type" type="const char*"/>
				<parameter name="description" type="const char*"/>
				<parameter name="validate" type="Seahorse.ValidUriFunc"/>
			</parameters>
			<return-type type="void"/>
		</method>
		<method name="get_uris" symbol="seahorse_servers_get_uris">
			<parameters>
			</parameters>
			<return-type type="GLib.SList*" transfer="full"/>
		</method>
		<method name="get_names" symbol="seahorse_servers_get_names">
			<parameters>
			</parameters>
			<return-type type="GLib.SList*" transfer="full"/>
		</method>
		<method name="is_valid_uri" symbol="seahorse_servers_is_valid_uri">
			<parameters>
				<parameter name="uri" type="const char*"/>
			</parameters>
			<return-type type="bool" transfer="full"/>
		</method>
		<constructor name="new" symbol="seahorse_servers_new">
			<parameters>
			</parameters>
			<return-type type="Seahorse.Servers*"/>
		</constructor>
	</object>
	<interface name="SeahorseView" get-type="seahorse_view_get_type">
		<requires>
			<object name="GLib.Object"/>
		</requires>
		<method name="get_selected_keys" symbol="seahorse_view_get_selected_keys">
			<parameters>
				<parameter name="self" type="Seahorse.View*"/>
			</parameters>
			<return-type type="GLib.List*" transfer="full"/>
		</method>
		<method name="set_selected_keys" symbol="seahorse_view_set_selected_keys">
			<parameters>
				<parameter name="self" type="Seahorse.View*"/>
				<parameter name="keys" type="GLib.List*"/>
			</parameters>
			<return-type type="void"/>
		</method>
		<method name="get_selected_key_and_uid" symbol="seahorse_view_get_selected_key_and_uid">
			<parameters>
				<parameter name="self" type="Seahorse.View*"/>
				<parameter name="uid" type="uint" direction="out" transfer="full"/>
			</parameters>
			<return-type type="Seahorse.Key*"/>
		</method>
		<property name="selected_key" type="Seahorse.Key*" readable="1" writable="1"/>
		<property name="current_keyset" type="Seahorse.Keyset*" readable="1"/>
		<property name="window" type="Gtk.Window*" readable="1"/>
		<signal name="selection_changed">
			<parameters>
			</parameters>
			<return-type type="void"/>
		</signal>
	</interface>
	<callback name="SeahorseValidUriFunc">
		<parameters>
			<parameter name="uri" type="const char*"/>
		</parameters>
		<return-type type="bool" transfer="full"/>
	</callback>
</namespace>
</api>
